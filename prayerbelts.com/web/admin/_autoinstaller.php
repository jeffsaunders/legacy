<?php
 error_reporting(E_ALL ^ E_NOTICE); if (!ini_get('safe_mode')) { @set_time_limit(90); } @ini_set("memory_limit","32M"); session_start(); $version = "1.5"; $remoteURL = "http://www.snippetmaster.com/auto-installer/autoinstaller-get-latest-info.php?version=".$version; $tmp_folder = "temp-for-installer-please-delete-me"; $ascii_file_types = array('css','css-original','htm','html','html-original','js','php','php-original','txt','inc'); if (!function_exists('ftp_chmod')) { function ftp_chmod($ftpstream, $chmod, $file) { $result = ftp_site($ftpstream, "CHMOD ".$chmod." ".$file); return $result; } } if(!function_exists("file_get_contents")) { function file_get_contents($filename) { $fp = fopen($filename, "rb"); if (!$fp) { return false; } $contents = ""; while (! feof($fp)) { $contents .= fread($fp, 4096); } return $contents; } } if ( (!isset($_POST['action'])) && (!isset($_GET['action'])) && (!isset($_GET['phpinfo'])) && (!isset($_GET['loadertest'])) ){ showHTMLHeader(); if (function_exists("ftp_connect") == false) { die("<font color='red'>The 'FTP Functions' of PHP are not installed on your web server so this Auto-Installer will not work for you. <p><b>You have two solutions to this problem:</b><ol><li><b>(Recommended)</b> Ask your web host to '<a href=\"http://www.php.net/manual/en/ref.ftp.php\" target=\"_blank\">recompile PHP with the FTP Function included</a>' and then try the Auto-Installer again. (Most web hosts will have no problem to do this for you and it should only take a minute, with no 'downtime' at all.)<br>&nbsp;</li><li>Manually upload the SnippetMaster files. [<a href='http://www.snippetmaster.com/download/manual-install.php'>more info</a>]</li></ol></font>"); } getRemoteInfo($remoteURL); $_SESSION['ftp_hostname'] = "localhost"; $_SESSION['ftp_port'] = "21"; $_SESSION['encoding_type'] = "auto"; if (!isset($_SESSION['ftp_passive'])) { $_GET['pasv'] = "on"; } if ($_GET['pasv'] == "on") { $_SESSION['ftp_passive'] = "on"; } else { $_SESSION['ftp_passive'] = "off"; } showCommonHTMLFormTop(); showGetFTPInfoForm(); showCommonHTMLFormBottom(); showHTMLFooter(); } elseif ($_POST['action'] == "doValidateFTPInfo") { $_SESSION['ftp_username'] = trim($_POST['ftp_username']); $_SESSION['ftp_password'] = trim($_POST['ftp_password']); $_SESSION['ftp_hostname'] = trim($_POST['ftp_hostname']); $_SESSION['ftp_starting_path'] = trim($_POST['ftp_starting_path']); $_SESSION['ftp_port'] = trim($_POST['ftp_port']); $_SESSION['ftp_passive'] = $_POST['ftp_passive']; $_SESSION['encoding_type'] = $_POST['encoding_type']; $errors = array(); if ($_SESSION['ftp_username'] == "") { array_push($errors, "You must enter your FTP username."); } if ($_SESSION['ftp_password'] == "") { array_push($errors, "You must enter your FTP password."); } if ($_SESSION['ftp_hostname'] == "") { array_push($errors, "You must enter your FTP hostname. (Usually \"localhost\")"); } if ($_SESSION['ftp_port'] == "") { array_push($errors, "You must enter your FTP port. (Usually \"21\")"); } if (count($errors) <= 0) { if (!$conn_id = @ftp_connect($_SESSION['ftp_hostname'], $_SESSION['ftp_port'], 10)) { array_push($errors, "I was unable to connect to your ftp server (<b>".$_SESSION['ftp_hostname']."</b>). Please verify the 'hostname' you specified is correct, and then try again.<br><br><b>Note:</b> If you are 100% positive that you have specified the correct ftp hostname, then the problem might be that your server is configured to NOT allow 'outgoing' ftp connections. You must either install SnippetMaster using the <a href='http://www.snippetmaster.com/download/download.php'>manual installation</a> method or contact your web host for assistance to find out if they allow 'outgoing' ftp connections from your server."); } elseif(!@ftp_login($conn_id, $_SESSION['ftp_username'], $_SESSION['ftp_password'])) { array_push($errors, "I was unable to connect to your ftp server with the username and password you provided."); } } if (count($errors) > 0) { showHTMLHeader(); showCommonHTMLFormTop(); showGetFTPInfoForm(); showCommonHTMLFormBottom(); showHTMLFooter(); exit; } else { showHTMLHeader(); showCommonHTMLFormTop(); showGetFTPProgramFolderForm($conn_id, $_SESSION['ftp_starting_path']); showCommonHTMLFormBottom(); showHTMLFooter(); } } elseif ($_GET['action'] == "ftp_chdir") { showHTMLHeader(); showCommonHTMLFormTop(); showGetFTPProgramFolderForm($conn_id); showCommonHTMLFormBottom(); showHTMLFooter(); exit; } elseif ($_POST['action'] == "doFTPInstall") { showHTMLHeader(); $destination_path = trim($_POST['ftp_program_dir']); if (!$conn_id) { if (!$conn_id = @ftp_connect($_SESSION['ftp_hostname'], $_SESSION['ftp_port'], 10)) { echo "I'm having trouble connecting to your FTP server... now trying again.<br>"; if (!$conn_id = @ftp_connect($_SESSION['ftp_hostname'], $_SESSION['ftp_port'], 10)) { doCriticalError("I was not able to connect to your FTP server!"); } } else { ftp_login($conn_id, $_SESSION['ftp_username'], $_SESSION['ftp_password']); } } echo "Verifying selected program folder...<br>"; check_pasv_mode($conn_id); if(!@ftp_chdir($conn_id, $destination_path)){ doCriticalError("Unable to change into the program folder you selected: ".$destination_path); } if ($_SESSION['encoding_type'] != "auto") { if ($_SESSION['encoding_type'] == "ioncube") { echo "Skipping the Ioncube/Zend tests -- you specifically selected to use the <b>Ioncube</b> version.<br>"; } elseif ($_SESSION['encoding_type'] == "zend") { echo "Skipping Ioncube/Zend tests -- you specifically selected to use the <b>Zend</b> version.<br>"; } } else { echo "Testing if we should use the Ioncube or Zend encoded version...<br>"; testZendIoncube(); } if ($_SESSION['encoding_type'] == "ioncube") { $_SESSION['remote_download_filename'] = $_SESSION['remote_download_filename_ioncube']; } elseif ($_SESSION['encoding_type'] == "zend") { $_SESSION['remote_download_filename'] = $_SESSION['remote_download_filename_zend']; } echo "Setting up the FTP connection...<br>"; if ($_SESSION['ftp_passive'] == "on") { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Turning on PASV mode.<br>"; if (!ftp_pasv($conn_id, true)) { doCriticalError("Could not enable ftp PASV (passive) mode."); } } check_pasv_mode($conn_id); if (!ftp_chdir($conn_id, $destination_path)) { doCriticalError("Could not change into the ".$destination_path." folder."); } echo "Creating temporary work folder...<br>"; $tmp_folder_for_ftp = $tmp_folder; $tmp_folder = getcwd() . "/" . $tmp_folder; if (file_exists($tmp_folder)) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Old temp work folder was found. Cleaning it up...<br>"; doRemoveTempDir($tmp_folder, $tmp_folder_for_ftp, $conn_id); } check_pasv_mode($conn_id); if (!ftp_mkdir($conn_id, $tmp_folder_for_ftp)) { doCriticalError("Unable to create temp folder."); } check_pasv_mode($conn_id); ftp_chmod($conn_id, 0777, $tmp_folder_for_ftp); if ( (!file_exists($tmp_folder)) || (!is_writable($tmp_folder)) ) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Could not change permissions for temp folder... trying a different method...."; check_pasv_mode($conn_id); if (!ftp_site($conn_id, "CHMOD 0777 ".$tmp_folder_for_ftp)) { doCriticalError("Unable to give write permissions to the temp folder."); } else { echo "It worked!<br>"; } } echo "Downloading the latest SnippetMaster file: <b>".$_SESSION['remote_download_filename']."</b> ...<i>(please wait)</i><br>"; $remote_file = $_SESSION['remote_download_folder'] ."/". $_SESSION['remote_download_filename']; $tmp_zipfile = $tmp_folder . "/" . $_SESSION['remote_download_filename']; downloadRemoteFile($remote_file, $tmp_zipfile); echo "Unzipping the files and FTPing them into your <b>".$destination_path."</b> program folder.<br>"; $unzip = new unzipfile($tmp_zipfile, $tmp_folder); echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Doing the folders...<br>"; $unzip->ftp_dirs(); echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Doing the files...<i>(please wait)</i><br>"; $unzip->ftp_files(); $first_time_install = false; if ( (!file_exists("db.inc.php")) && (file_exists("db.inc.php-original")) ) { echo "Detected 1st time installation. Renaming the db pointer file and changing file permissions...<br>"; $first_time_install = true; check_pasv_mode($conn_id); ftp_rename($conn_id, "db.inc.php-original", "db.inc.php"); $filename = "db.inc.php"; if (!is_writable($filename)) { check_pasv_mode($conn_id); ftp_chmod($conn_id, 0666, $filename); if ( (!file_exists($filename)) || (!is_writable($filename)) ) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Could not change permissions for ".$filename."... trying a different method..."; check_pasv_mode($conn_id); if (ftp_site($conn_id, "CHMOD 0666 ".$filename)) { echo "It worked!<br>"; } else { echo "No luck. You'll have to change permissions manually during Install Wizard.<br>"; } } } $folder = "snippet-db"; if (!checkPathWritePermission($folder) === true) { check_pasv_mode($conn_id); ftp_chmod($conn_id, 0777, $folder); if ( (!file_exists($folder)) || (!is_writable($folder)) ) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Could not change permissions for ".$folder."... trying a different method..."; check_pasv_mode($conn_id); if (ftp_site($conn_id, "CHMOD 0777 ".$folder)) { echo "It worked!<br>"; } else { echo "No luck. You'll have to change permissions manually during Install Wizard.<br>"; } } } } echo "All done!  I will now start the cleanup process.<br>"; echo "Removing temporary work folder...<br>"; doRemoveTempDir($tmp_folder, $tmp_folder_for_ftp, $conn_id); echo "Attempting to delete myself...<br>"; $filename = basename(__FILE__); check_pasv_mode($conn_id); if (!@ftp_delete($conn_id, $filename)) { if (file_exists(__FILE__)) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>I was unable to delete the ".$filename." file.</b> (This is a major security risk because anyone could 'run' it. You must be sure to use your FTP program and delete this file before continuing.)"; } } echo "<p><b>The Auto-Installer is now finished!</b><br>Please review the messages above. If there are no errors, you can start "; if ($first_time_install) { echo "the <a href='.'>Installation Wizard</a>."; } else { echo "<a href='.'>SnippetMaster</a> now.<br>(If a database upgrade is needed for this version of SnippetMaster, the Upgrade Wizard will start automatically.)"; } echo "<p>&nbsp;<p>&nbsp;<p>&nbsp;<p>&nbsp;<p>&nbsp;"; showHTMLFooter(); unset($_SESSION); exit; } elseif ($_GET['action'] == "show_image") { echo showImage($_GET["image"]); } elseif (isset($_GET['phpinfo'])) { echo phpinfo(); } elseif (isset($_GET['loadertest'])) { showHTMLHeader(); getRemoteInfo($remoteURL); echo "Testing if Ioncube or Zend is installed and working on your server...<br>"; $_SESSION['encoding_type'] = "auto"; testZendIoncube(); showHTMLFooter(); exit; } else { echo "Incorrectly called. Please try again."; } exit; function getRemoteInfo($remoteURL) { if (! $remote_data = @file_get_contents($remoteURL)) { $remote_data = doSocketConnection($remoteURL); } $data = @unserialize($remote_data); if (!$data) { doCriticalError("I was unable to connect to the SnippetMaster server."); } if ( (isset($data['error'])) && ($data['error'] == "old_version") ){ global $version; doCriticalError("You are using an old version of the SnippetMaster Auto-Installer. (v".$version.") <br>Please visit the SnippetMaster website and <a href='http://www.snippetmaster.com/download/'>download the latest version</a>."); } else { $_SESSION['remote_download_folder'] = $data['folder_url']; $_SESSION['remote_download_filename_ioncube'] = $data['filename-ioncube']; $_SESSION['remote_download_filename_zend'] = $data['filename-zend']; $_SESSION['minimum_ioncube_loader_version_needed'] = $data['minimum_ioncube_loader_version_needed']; $_SESSION['minimum_zend_loader_version_needed'] = $data['minimum_zend_loader_version_needed']; if (isset($_GET['file'])) { $_SESSION['remote_download_filename_ioncube'] = $_GET['file']; $_SESSION['remote_download_filename_zend'] = $_GET['file']; } } } function testZendIoncube() { if (function_exists('ioncube_loader_version')) { $ioncube_installed_version = ioncube_loader_version(); if ($ioncube_installed_version >= $_SESSION['minimum_ioncube_loader_version_needed']) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Ioncube loaders (v".$ioncube_installed_version.") are installed on your server so we will use the <b>Ioncube</b> version of SnippetMaster.<br>"; $_SESSION['encoding_type'] = "ioncube"; } else { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>The Ioncube loaders (v".$ioncube_installed_version.") are installed, but they are too old and need to be upgraded to the latest version.</b><br>"; $ioncube_too_old = true; } } else { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ioncube loaders are not installed.<br>"; } if ($_SESSION['encoding_type'] == "auto") { if (function_exists('zend_loader_enabled')) { if ($zend_installed_version = getZendOptimizerVersion()) { if ($zend_installed_version >= $_SESSION['minimum_zend_loader_version_needed']) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zend Optimizer (v".$zend_installed_version.") is installed on your server so we will use the <b>Zend</b> version of SnippetMaster.<br>"; $_SESSION['encoding_type'] = "zend"; } else { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Zend Optimizer (v".$zend_installed_version.") is installed, but it is too old and needs to be upgraded to the latest version.</b><br>"; $zend_too_old = true; } } } else { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zend Optimizer is not installed.<br>"; } } if ($_SESSION['encoding_type'] == "auto") { if (!$ioncube_too_old == true) { $_SESSION['encoding_type'] = "ioncube"; $sys_info = ic_system_info(); if (ini_get('safe_mode')) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"; echo "PHP safe mode is enabled, so the Ioncube 'runtime' loaders can not be used.<br>"; $_SESSION['encoding_type'] = "auto"; } elseif ($sys_info['THREAD_SAFE'] && !$sys_info['CGI_CLI']) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"; echo "PHP has threading support enabled but is not CGI/FastCGI, so the Ioncube 'runtime' loaders can not be used.<br>"; $_SESSION['encoding_type'] = "auto"; } elseif ($sys_info['DEBUG_BUILD']) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"; echo "PHP has debugging mode enabled, so the Ioncube 'runtime' loaders can not be used.<br>"; $_SESSION['encoding_type'] = "auto"; } else { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Ioncube 'runtime' loaders that are included with SnippetMaster should work, so we will use the <b>Ioncube</b> version of SnippetMaster.<br>"; } } } if ($_SESSION['encoding_type'] == "auto") { ob_start(); echo "Your web server needs the Zend or Ioncube encoding system to work properly, otherwise SnippetMaster will not work. Most web hosts will have no problem to fix this for you. You  need to copy and paste this page and give it to your web host, or give them this link:<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='http://".$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF']."?loadertest'>http://".$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF']."?loadertest</a>"; echo "<p>Here are the ways you can get Zend or Ioncube working for your server:<ol>"; if ($zend_too_old == true) { echo "<li>Ask your web host to upgrade the Zend Optimizer on your server to <a href='http://www.zend.com/products/zend_optimizer' target='_blank'>the latest version</a>. (The version that is currently installed is too old and will not work.)  Most web hosts will have no problem doing this, and it should take them only a few minutes.</li><br>&nbsp;"; } else { echo "<li>Ask your web host to install the <a href='http://www.zend.com/products/zend_optimizer' target='_blank'>Zend Optimizer</a> software on your server. Most web hosts will have no problem doing this, and it should take them only a few minutes. (The Zend Optimizer is made by the same people who made PHP!) You should not experience any 'downtime' as a result of the software being installed.</li><br>&nbsp;"; } if ($ioncube_too_old == true) { echo "<li>Ask your web host to upgrade the Ioncube loader files on your server to <a href='http://www.ioncube.com/loaders.php' target='_blank'>the latest version</a>. (The files that are currently installed are too old and will not work.)  Most web hosts will have no problem doing this, and it should take them only a few minutes.</li>"; } else { echo "<li>Ask your web host to install the <a href='http://www.ioncube.com/loaders.php' target='_blank'>Ioncube loader files</a> using the php.ini file for your server. Most web hosts will have no problem doing this, and it should take them only a few minutes. You should not experience any 'downtime' as a result of the software being installed.</li>"; } echo "</ol>"; $message = ob_get_contents(); ob_end_clean(); doCriticalError($message); } } function ic_system_info() { $thread_safe = false; $debug_build = false; $cgi_cli = false; $php_ini_path = ''; ob_start(); phpinfo(INFO_GENERAL); $php_info = ob_get_contents(); ob_end_clean(); foreach (split("\n",$php_info) as $line) { if (eregi('command',$line)) { continue; } if (preg_match('/thread safety.*(enabled|yes)/Ui',$line)) { $thread_safe = true; } if (preg_match('/debug.*(enabled|yes)/Ui',$line)) { $debug_build = true; } if (eregi("configuration file.*(</B></td><TD ALIGN=\"left\">| => |v\">)([^ <]*)(.*</td.*)?",$line,$match)) { $php_ini_path = $match[2]; if (!@file_exists($php_ini_path)) { $php_ini_path = ''; } } $cgi_cli = ((strpos(php_sapi_name(),'cgi') !== false) || (strpos(php_sapi_name(),'cli') !== false)); } return array('THREAD_SAFE' => $thread_safe, 'DEBUG_BUILD' => $debug_build, 'PHP_INI' => $php_ini_path, 'CGI_CLI' => $cgi_cli); } function getZendOptimizerVersion() { ob_start(); phpinfo(INFO_GENERAL); $phpinfo = ob_get_contents(); ob_end_clean(); $phpinfo = str_replace("&nbsp;", " ", $phpinfo); $needle = "with Zend Optimizer v"; if (!$tmp = stristr($phpinfo, $needle)) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zend Optimizer appears to be installed, but I could not find the version.<br>"; return false; } else { $tmp = substr($tmp, strlen($needle), 5); $pieces = explode(",", $tmp); return $pieces[0]; } } function check_pasv_mode($conn_id) { if ($_SESSION['ftp_passive'] == "on") { if (!@ftp_pasv($conn_id, true)) { doCriticalError("Could not enable ftp PASV (passive) mode."); } } } function get_transfer_mode($file) { global $ascii_file_types; $mode = FTP_BINARY; if ($ext = strtolower(substr(strrchr($file, "."), 1)) ) { if ( ($_SESSION['encoding_type'] == "zend") && (($ext == "html") || ($ext == "php")) ) { $mode = FTP_BINARY; } elseif (in_array($ext, $ascii_file_types)) { $mode = FTP_ASCII; } } return $mode; } function keepAliveFTP($conn_id) { if (@ftp_pwd($conn_id)) { return true; } else { doCriticalError("Problem keeping the FTP connection alive."); return false; } } function downloadRemoteFile($remote_file_url, $local_destination_filename) { $filename = basename($local_destination_filename); if (!@touch($local_destination_filename)) { doCriticalError("Unable to create the ".$filename." file on your server."); } if (!$handle = @fopen($local_destination_filename, 'w')) { doCriticalError("Unable to open the ".$filename." file on your server."); } if (!$lines = @file($remote_file_url)) { echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Direct download method did not work.  Trying the 'sockets' method instead...<br>"; if (!$file_content = doSocketConnection($remote_file_url)) { doCriticalError("Problem getting file from $remote_file_url."); } elseif ( (strlen($file_content) < 1000) && (stristr($file_content, "404 Not Found")) ) { doCriticalError("The file does not exist: " . $remote_file_url); } } else { $file_content = implode('', $lines); unset($lines); } echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File is downloaded. Now saving it...<br>"; if (fwrite($handle, $file_content) === FALSE) { doCriticalError("Unable to write to the ".$filename." file on your server."); } fclose($handle); return TRUE; } function doCriticalError($message) { global $tmp_folder, $tmp_folder_for_ftp, $conn_id; echo "<b><font size='3' color='red'>" . $message . "</font></b><br>"; echo "A problem was found. I will now clean up anything done so far...<br>"; if (file_exists($tmp_folder)) { doRemoveTempDir($tmp_folder, $tmp_folder_for_ftp, $conn_id); } echo "<p><b>The Auto-Installer did not work.</b><p>You are welcome to request a free installation here: <p><a href='http://www.snippetmaster.com/download/index.php#free_install'>http://www.snippetmaster.com/download/index.php#free_install</a></p> "; showHTMLFooter(); exit; } function doRemoveTempDir($dir, $tmp_folder_for_ftp=false, $conn_id=false) { global $tmp_folder; $handle = @opendir($dir); while (false!==($item = @readdir($handle))) { if($item != '.' && $item != '..') { if(@is_dir($dir.'/'.$item)) { doRemoveTempDir($dir.'/'.$item); } else { @unlink($dir.'/'.$item); } } } @closedir($handle); if (!stristr($dir, $tmp_folder_for_ftp)) { if(@rmdir($dir)) { $success = true; } } else { check_pasv_mode($conn_id); if (!ftp_rmdir($conn_id, $tmp_folder_for_ftp)) { if (file_exists($tmp_folder)) { echo "<b>Unable to delete the temp folder.</b> (You will need to delete it manually.)"; } } else { $success = true; } } return $success; } function getURLFromFilePath($file) { if(!isset($_SERVER["DOCUMENT_ROOT"])) { $_SERVER["DOCUMENT_ROOT"] = substr($_SERVER['SCRIPT_FILENAME'] , 0 , -strlen($_SERVER['PHP_SELF'])+1 ); } $file = realpath($file); $tmpURL = substr($file, strlen(realpath($_SERVER["DOCUMENT_ROOT"]))); $tmpURL = str_replace("//", "/", str_replace("\\", "/", $tmpURL)); if ($tmpURL == "/") { $tmpURL = ""; } $URL = "http://" . $_SERVER["HTTP_HOST"] . $tmpURL; $path_parts = pathinfo($URL); $URL = $path_parts['dirname']; return $URL; } function showHTMLHeader() { ?>
<html>
	<head>
		<title>SnippetMaster Auto-Installer</title>
		<style type="text/css">
			<!--
			body, td {
				font-family: Arial, Helvetica, sans-serif;
				font-size: 13px;
				color: #330066;
			}
			li {
				margin-bottom: 5px;
			}
			-->
		</style>
	</head>
	<body>
<?php  } function showCommonHTMLFormTop() { ?>
<TABLE WIDTH="450" BORDER="0" CELLSPACING="0" CELLPADDING="1" ALIGN="CENTER" BGCOLOR="#000000">
  <TR> 
    <TD> <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=5 WIDTH=100%>
        <TR> 
          <TD nowrap BGCOLOR="#DFDFDF"><p align="center"><b><font size="2" face="Verdana, Arial, Helvetica, sans-serif">SnippetMaster Auto-Installer</font></b></p></TD>
        </TR>
      </TABLE></TD>
  </TR>
  <TR> 
    <TD> 
	<TABLE WIDTH=100% BORDER=0 CELLPADDING=0 CELLSPACING=5 bgcolor="#F2F2F2">
        <TR> 
          <TD align="left">
<?php  } function showCommonHTMLFormBottom() { ?>
		</TD>
        </TR>
      </TABLE>
	  </TD>
  </TR>
</TABLE>
<p>&nbsp;</p>

<?php } function showHTMLFooter() { ?>
	</body>
	</html>
<?php  } function showGetFTPInfoForm() { global $errors; echo showOverLIBJavascript(); ?>
		  <br>This Auto-Installer will download and install/upgrade the latest version of SnippetMaster for you.
		  <br><br>The following actions will be performed:
		  <ol>
			<li>Ask you to find and confirm your SnippetMaster program folder.</li>
			<li>Test to see if the Ioncube or Zend encoding works on your server.</li>
			<li>Download, unzip and ftp the latest version of SnippetMaster into your selected folder.</li>
			<li>If this is a first-time install, then set up the db pointer file, change any needed file permissions, and start the Installation Wizard.</li>
		  </ol>
            <table width="350" border="0" align="center" cellpadding="5" cellspacing="0">
              <tr> 
                <td bgcolor="#CCCCCC"><font color="#FF0000" size="2" face="Arial, Helvetica, sans-serif"><b>Note:</b> 
                  </font><font color="#330066">The information you enter below 
                  will not be used for anything except by this Auto-Installer 
                  program. Your information is not stored anywhere and will be 
				  erased from memory once the program is finished.</font></td>
              </tr>
            </table>
            <?php if(count($errors) > 0){ ?>
             <table width="100%" align="center" border="0" cellspacing="5" cellpadding="0">
              <tr> 
                <td align="left"> <div align="center"> <hr width="85%" size="1"><br /><FONT COLOR="red"><b>A 
                    PROBLEM WAS FOUND!</b></font></div>
                  <p><font color="red">The following error(s) must be fixed before 
                    you can continue: </font> 
                  <ul>
 <?php foreach ($errors as $error_text) { echo '<FONT COLOR="red"><li>' . $error_text . '</li></FONT>'; } ?>
                  </ul><div align="center"><hr width="85%" size="1"></div></td>
              </tr>
            </table>
            <?php } ?>
            <form action="<?=$_SERVER['PHP_SELF']?>" method="post" name="Installer">
              <table width="100%" border="0" cellspacing="5" cellpadding="0">
                <tr bgcolor="#CACACA"> 
                  <td colspan="2" height="25"><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href="javascript:void(0);" onmouseover="return overlib('If you select the <b>Auto</b> option then the Auto-Installer will try to automatically determine what encoding type to use. It will also check to make sure you have the minimum version for any required Ioncube loaders files or Zend Optimizer. This is the recommended option.<p><b>Note:</b> If you select the <b>Zend</b> or <b>Ioncube</b> option, then no testing or verification will be performed to make sure the software will work correctly. You should only choose the Zend or Ioncube option if you are <i>sure</i> it is the version you want to use.', CAPTION, 'Ioncube or Zend?');" onmouseout='nd();'><span class='cursor-help'><img src='<?=$_SERVER['PHP_SELF']?>?action=show_image&image=help.gif' width="16" height="16" border='0' align="absmiddle"></span></a>&nbsp;What Encoding Type Do you Want To Use?</strong></td>
                </tr>
                <tr> 
                  <td colspan="2" height="25" align="center">
				  <input name="encoding_type" type="radio" id="encoding_type" value="auto"<?=$_SESSION['encoding_type'] == "auto" ? " checked" : ""?>> Automatic &nbsp; 
				 <input name="encoding_type" type="radio" id="encoding_type" value="ioncube"<?=$_SESSION['encoding_type'] == "ioncube" ? " checked" : ""?>> Ioncube &nbsp;
				 <input name="encoding_type" type="radio" id="encoding_type" value="zend"<?=$_SESSION['encoding_type'] == "zend" ? " checked" : ""?>> Zend 
				 </td>
                </tr>
				<tr bgcolor="#CACACA"> 
                  <td colspan="2" height="25"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enter Your FTP Connection Information</strong></td>
                </tr>
                <tr height="10"> 
                  <td>&nbsp;</td>
                  <td>&nbsp;</td>
                </tr>
                <tr> 
                  <td width="33%"><div align="right"><strong>Username&nbsp;</strong><a href="javascript:void(0);" onmouseover="return overlib('Enter your FTP account username here.', CAPTION, 'Username');" onmouseout='nd();'><span class='cursor-help'><img src='<?=$_SERVER['PHP_SELF']?>?action=show_image&image=help.gif' width="16" height="16" border='0' align="absmiddle"></span></a>&nbsp;</div></td>
                  <td width="67%"> <input tabindex="1" name="ftp_username" type="text" id="ftp_username" value="<?=$_SESSION['ftp_username']?>" size="30"> 
                  </td>
                </tr>
                <tr> 
                  <td><div align="right"><strong>Password&nbsp;</strong><a href="javascript:void(0);" onmouseover="return overlib('Enter your FTP account password here.', CAPTION, 'Password');" onmouseout='nd();'><span class='cursor-help'><img src='<?=$_SERVER['PHP_SELF']?>?action=show_image&image=help.gif' width="16" height="16" border='0' align="absmiddle"></span></a>&nbsp;</div></td>
                  <td> <input tabindex="2" name="ftp_password" type="password" id="ftp_password" size="30"> 
                  </td>
                </tr>
                <tr> 
                  <td><div align="right"><strong>Hostname&nbsp;</strong><a href="javascript:void(0);" onmouseover="return overlib('Enter your FTP server name here. In most cases you should just leave this value to &quot;localhost&quot;.<p>If &quot;localhost&quot; does not work, then you should try using your domain name or something like this: <p>ftp.yourdomain.com', CAPTION, 'Hostname');" onmouseout='nd();'><span class='cursor-help'><img src='<?=$_SERVER['PHP_SELF']?>?action=show_image&image=help.gif' width="16" height="16" border='0' align="absmiddle"></span></a>&nbsp;</div></td>
                  <td> <input tabindex="3" name="ftp_hostname" type="text" id="ftp_hostname" value="<?=$_SESSION['ftp_hostname']?>" size="30"> 
                  </td>
                </tr>
                 </tr>
<!--                <tr> 
                  <td><div align="right"><strong>Initial Folder&nbsp;</strong><a href="javascript:void(0);" onmouseover="return overlib('If you already know the &quot;ftp path&quot; to your SnippetMaster program folder, then you can enter it here. Otherwise, just leave this blank and you can find it manually later.', CAPTION, 'Initial Folder');" onmouseout='nd();'><span class='cursor-help'><img src='<?=$_SERVER['PHP_SELF']?>?action=show_image&image=help.gif' width="16" height="16" border='0' align="absmiddle"></span></a>&nbsp;</div></td>
                  <td> <input tabindex="4" name="ftp_starting_path" type="text" id="ftp_starting_path" value="<?=$_SESSION['ftp_starting_path']?>" size="30">
				  <font face="verdana" size="1">ie: /public_html</font><br>
                  </td>
                </tr> 
-->				<tr> 
                  <td><div align="right"><strong>Port&nbsp;</strong><a href="javascript:void(0);" onmouseover="return overlib('You should not need to change this from the default of &quot;21&quot; unless your ftp server uses some other port number.', CAPTION, 'Port');" onmouseout='nd();'><span class='cursor-help'><img src='<?=$_SERVER['PHP_SELF']?>?action=show_image&image=help.gif' width="16" height="16" border='0' align="absmiddle"></span></a>&nbsp;</div></td>
                  <td> <input tabindex="5" name="ftp_port" type="text" id="ftp_port" value="<?=$_SESSION['ftp_port']?>" size="2" maxlength="6"> <strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use PASV Mode?&nbsp;</strong><a href="javascript:void(0);" onmouseover="return overlib('You should leave this <i>unchecked</i> unless you are behind a firewall or proxy and the file transfer system has problems transfering the files.', CAPTION, 'Use PASV Mode');" onmouseout='nd();'><span class='cursor-help'><img src='<?=$_SERVER['PHP_SELF']?>?action=show_image&image=help.gif' width="16" height="16" border='0' align="absmiddle"></span></a>&nbsp;<input tabindex="6" name="ftp_passive" type="checkbox" id="ftp_passive" value="on"<?=$_SESSION['ftp_passive'] == "on" ? " checked" : ""?>>
                  </td>
                </tr>
              </table>
              <div align="center"> 
                <input tabindex="7" name="submit" type="submit" value="Continue">
				<input name="action" type="hidden" value="doValidateFTPInfo">
              </div>
            </form>
			<script language="JavaScript" type="text/javascript">
							document.Installer.ftp_username.focus();

			</script>
<?php  } function itemize_dir($contents) { foreach ($contents as $file) { if(ereg("([-dl][rwxstST-]+).* ([0-9]*) ([a-zA-Z0-9]+).* ([a-zA-Z0-9]+).* ([0-9]*) ([a-zA-Z]+[0-9: ]*[0-9])[ ]+(([0-9]{2}:[0-9]{2})|[0-9]{4}) (.+)", $file, $regs)) { $type = (int) strpos("-dl", $regs[1]{0}); $tmp_array['line'] = $regs[0]; $tmp_array['type'] = $type; $tmp_array['rights'] = $regs[1]; $tmp_array['number'] = $regs[2]; $tmp_array['user'] = $regs[3]; $tmp_array['group'] = $regs[4]; $tmp_array['size'] = $regs[5]; $tmp_array['date'] = date("m-d",strtotime($regs[6])); $tmp_array['time'] = $regs[7]; $tmp_array['name'] = $regs[9]; } $dir_list[] = $tmp_array; } return $dir_list; } function showGetFTPProgramFolderForm($conn_id, $initial_dir=false) { if ($_GET['pasv'] == "on") { $_SESSION['ftp_passive'] = "on"; } echo "<br>Please navigate through the folders below and find your SnippetMaster program folder. (Find the folder where this Auto-Installer is located.) <p>The <b>Install Now!</b> button will become enabled once you have selected the correct folder."; if (!$conn_id) { if (!$conn_id = @ftp_connect($_SESSION['ftp_hostname'], $_SESSION['ftp_port'], 10)) { if (!$conn_id = @ftp_connect($_SESSION['ftp_hostname'], $_SESSION['ftp_port'], 10)) { doCriticalError("I was not able to connect to your FTP server!"); } } else { ftp_login($conn_id, $_SESSION['ftp_username'], $_SESSION['ftp_password']); } } if ($initial_dir) { check_pasv_mode($conn_id); if(!@ftp_chdir($conn_id, $_SESSION['ftp_starting_path'])){ echo '<script>alert("Unable to change into the starting ftp folder you specified:\n\n'.$_SESSION['ftp_starting_path'].'\n\nNo problem. We will start at the top.")</script>'; } } elseif (isset($_GET['path'])) { check_pasv_mode($conn_id); ftp_chdir($conn_id, $_GET['path']); } $current_dir = ftp_pwd($conn_id); $saved_current_dir = $current_dir; check_pasv_mode($conn_id); $file_list = ftp_nlist($conn_id, $current_dir); $script_filename = basename($_SERVER["PHP_SELF"]); $script_is_in_current_dir = false; if ($file_list != "") { foreach($file_list as $filename) { if (strstr($filename, $script_filename)) { $script_is_in_current_dir = true; break; } } } $disabled = " disabled"; if ($script_is_in_current_dir) { $style = " color=green;"; $disabled = ""; } ?>
	<form action="<?=$_SERVER['PHP_SELF']?>" method="post" name="Installer">
	<b>Selected folder:</b>
	<BR><input name="ftp_program_dir" type="text" id="ftp_program_dir" style="width:100%;<?=$style?>" size="60"  value="<?=$current_dir?>"<?=$disabled?>><br>&nbsp;<br><div align="center"><input name="submit" type="submit" value="Install Now!"<?=$disabled?>><input name="action" type="hidden" value="doFTPInstall">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
	</form><p>
<?php
 if (empty($file_list)) { echo "<font color='red'>"; echo "<div align='center'>"; echo "I was not able to get a listing of files or folders from your FTP server."; echo "<p><a href='".$_SERVER['PHP_SELF']."?pasv=on&action=ftp_chdir&path='".$current_dir."'>Click here to try again with 'PASV Mode' enabled.</a></p>"; echo "<hr align='center' width='100' size='1'>"; echo "</div>"; echo "<br>If it still does not work with PASV Mode enabled, then you must install SnippetMaster using the <a href='http://www.snippetmaster.com/download/download.php'>manual installation</a> method or you may request a <a href=\"http://www.snippetmaster.com/download/index.php#freeinstall\">free installation</a>.<br>&nbsp;"; return false; } if ($current_dir != "/") { $parent_dir = substr($current_dir, 0, strrpos($current_dir, "/")); echo '<a href="'.$_SERVER["PHP_SELF"].'?action=ftp_chdir&path='.$parent_dir.'"><img src="'.$_SERVER['PHP_SELF'].'?action=show_image&image=folder-up.gif" align="absmiddle" border="0" alt="Go up one folder"></a>&nbsp;<a href="'.$_SERVER["PHP_SELF"].'?action=ftp_chdir&path='.$parent_dir.'" title="Go up one folder">. .</a><br>&nbsp;<br>'."\n"; } natcasesort($file_list); foreach($file_list as $filename) { check_pasv_mode($conn_id); $file_size = ftp_size($conn_id, $current_dir."/".$filename); $extension = strtolower(substr(strrchr($filename, "."), 1)); if( (($file_size == "-1") || ($file_size == "0")) && ($filename != ".") && ($filename != "..") && ($filename[0] != ".") && ($extension != "gif") && ($extension != "htm") && ($extension != "html") && ($extension != "jpg") && ($extension != "php") && ($extension != "css") && ($extension != "txt") ) { if ($current_dir != "") { if (stristr($filename, $current_dir)) { $current_dir = ""; } } echo '<a href="'.$_SERVER["PHP_SELF"].'?action=ftp_chdir&path='.$current_dir.'/'.$filename.'"><img src="'.$_SERVER['PHP_SELF'].'?action=show_image&image=closedfolder.gif" align="absmiddle" border="0" alt="Open this folder"></a>&nbsp;<a href="'.$_SERVER["PHP_SELF"].'?action=ftp_chdir&path='.$current_dir.'/'.$filename.'" title="Open this folder">'.$filename.'</a><br>'."\n"; } } ?>
	<p><br>If the list above is missing some folders or is not correct, you can specify the 'ftp relative' path to your SnippetMaster program folder here:<br>
	<form action="<?=$_SERVER['PHP_SELF']?>" method="get" name="Installer">
		<input type="hidden" name="action" value="ftp_chdir">
		<input type="text" name="path" value="<?=$saved_current_dir?>" size="42">
		<input name="submit" type="submit" value="Change Folder">
	</form>
<?php
} class unzipfile { var $zipname; function unzipfile($zipname, $target) { $this->zipname = realpath($zipname); $this->target = realpath($target); } function ftp_dirs() { global $conn_id; flush(); $fp = @fopen($this->zipname, "rb"); @fseek($fp, filesize($this->zipname)-18); $centralDir = unpack('vdisk/vdisk_start/vdisk_entries/ventries/Vsize/Voffset/vcomment_size', @fread($fp, 18)); $pos = $centralDir['offset']; $filename_list = array(); for ($i = 0, $extracted = 0; $i < $centralDir['entries']; $i++) { @rewind($fp); @fseek($fp, $pos); $data = unpack('Vid', @fread($fp, 4)); if ($data['id'] != 0x02014b50) return -1; $fileHeader = unpack('vversion/vversion_extracted/vflag/vcompression/vmtime/vmdate/Vcrc/Vcompressed_size/Vsize/vfilename_len/vextra_len/vcomment_len/vdisk/vinternal/Vexternal/Voffset', @fread($fp, 42)); $fileHeader['filename'] = fread($fp, $fileHeader['filename_len']); $fileHeader['extra'] = ($fileHeader['extra_len'] > 0) ? fread($fp, $fileHeader['extra_len']) : ''; $fileHeader['comment'] = ($fileHeader['comment_len'] > 0) ? fread($fp, $fileHeader['comment_len']) : ''; $isDirectory = 0; if (substr($fileHeader['filename'], -1) == '/') $isDirectory = 1; $pos = ftell($fp); @rewind($fp); @fseek($fp, $fileHeader['offset']); $fileHeader['filename'] = dirname($fileHeader['filename']); $zipfile_dir_list[] = substr($fileHeader['filename'], strlen("snippetmaster/")); } $zipfile_dir_list = array_unique($zipfile_dir_list); $final_array_of_all_dirs = array(); foreach($zipfile_dir_list as $dir_path) { $individual_dirs_array = explode('/', $dir_path); $previous_dir = ""; foreach($individual_dirs_array as $current_dir) { if ($previous_dir != "") { $current_dir = $previous_dir . "/" . $current_dir; } $final_array_of_all_dirs[] = $current_dir; $previous_dir = $current_dir; } } $dir_list = array_unique($final_array_of_all_dirs); sort($dir_list); foreach($dir_list as $dir) { if ($dir != "") { check_pasv_mode($conn_id); if (!@ftp_nlist($conn_id, $dir)) { check_pasv_mode($conn_id); @ftp_mkdir($conn_id, $dir); } } } } function ftp_files() { global $conn_id, $tmp_folder; $old_dir = getcwd(); chdir($this->target); flush(); $fp = @fopen($this->zipname, "rb"); @fseek($fp, filesize($this->zipname)-18); $centralDir = unpack('vdisk/vdisk_start/vdisk_entries/ventries/Vsize/Voffset/vcomment_size', @fread($fp, 18)); $pos = $centralDir['offset']; for ($i = 0, $extracted = 0; $i < $centralDir['entries']; $i++) { @rewind($fp); @fseek($fp, $pos); $data = unpack('Vid', @fread($fp, 4)); if ($data['id'] != 0x02014b50) return -1; $fileHeader = unpack('vversion/vversion_extracted/vflag/vcompression/vmtime/vmdate/Vcrc/Vcompressed_size/Vsize/vfilename_len/vextra_len/vcomment_len/vdisk/vinternal/Vexternal/Voffset', @fread($fp, 42)); $fileHeader['filename'] = fread($fp, $fileHeader['filename_len']); $fileHeader['extra'] = ($fileHeader['extra_len'] > 0) ? fread($fp, $fileHeader['extra_len']) : ''; $fileHeader['comment'] = ($fileHeader['comment_len'] > 0) ? fread($fp, $fileHeader['comment_len']) : ''; $isDirectory = 0; if (substr($fileHeader['filename'], -1) == '/') $isDirectory = 1; $fileHeader['mtime'] = $this->toUnixTimeStamp($fileHeader['mdate'], $fileHeader['mtime']); $pos = ftell($fp); @rewind($fp); @fseek($fp, $fileHeader['offset']); $data = unpack('Vid', @fread($fp, 4)); if ($data['id'] != 0x04034b50) return -1; $fileHeader = unpack('vversion/vflag/vcompression/vmtime/vmdate/Vcrc/Vcompressed_size/Vsize/vfilename_len/vextra_len', @fread($fp, 26)); $fileHeader['filename'] = fread($fp, $fileHeader['filename_len']); $fileHeader['extra'] = ($fileHeader['extra_len'] > 0) ? fread($fp, $fileHeader['extra_len']) : ''; $fileHeader['mtime'] = $this->toUnixTimeStamp($fileHeader['mdate'], $fileHeader['mtime']); if (!$isDirectory) { $fileHeader['filename'] = substr($fileHeader['filename'], strlen("snippetmaster/")); $tmp_filename = $tmp_folder . "/" . basename($fileHeader['filename']); echo "<!-- " .$fileHeader['filename'] . "<br> --> \n"; if ($fileHeader['compression'] == 0) { if (($fp_tmp_file = @fopen($tmp_filename, 'wb')) == 0) { return -1; } $fsize = $fileHeader['compressed_size']; while ($fsize != 0) { $readSize = ($fsize < 2048 ? $fsize : 2048); $buffer = fread($fp, $readSize); @fwrite($fp_tmp_file, pack('a'.$readSize, $buffer), $readSize); $fsize -= $readSize; } @fclose($fp_tmp_file); } else { if (($fp_tmp_file = @fopen($tmp_filename, 'wb')) == 0) { return -1; } $buffer = @fread($fp, $fileHeader['compressed_size']); $fileContent = gzinflate($buffer); unset($buffer); @fwrite($fp_tmp_file, $fileContent, $fileHeader['size']); unset($fileContent); @fclose($fp_tmp_file); } $transfer_mode = get_transfer_mode(basename($fileHeader['filename'])); check_pasv_mode($conn_id); if (!ftp_put($conn_id, $fileHeader['filename'], $tmp_filename, $transfer_mode)) { doCriticalError("Error transfering the <b>".$fileHeader['filename']."</b> file.<p>Note: If the error above is something like <font color='#330066'><i>Warning: ftp_put(): PORT command successful in ... on line 1</i>'</font>, then try <a href='".$_SERVER['PHP_SELF']."?pasv=on'>restarting the Auto-Installer</a> and CHECKING the 'Use PASV Mode?' option.<p>You should also make sure there is enough disk space remaining.<br>"); } if (!unlink($tmp_filename)) { doCriticalError("Unable to delete ".$fileHeader['filename']." from tempfile location.<br>"); } } } chdir($old_dir); } function toUnixTimeStamp ($mdate, $mtime) { if ($mdate && $mtime) { $hour = ($mtime & 0xF800) >> 11; $minute = ($mtime & 0x07E0) >> 5; $second = ($mtime & 0x001F) * 2; $year = (($mdate & 0xFE00) >> 9) + 1980; $month = ($mdate & 0x01E0) >> 5; $day = $mdate & 0x001F; return mktime($hour, $minute, $second, $month, $day, $year); } else return time(); } } function showImage($image) { if ($image == "closedfolder.gif") { $image = <<<EOF
R0lGODlhEQARALMAAAAAAP///5CQAM/PYP//kP//z//PkO/v7////wAAAAAAAAAAAAAAAAAAAAAA
AAAAACH5BAEAAAgALAAAAAARABEAAARMEMlJq70Yib1B1kdREITgXcKgrgPHTYIozyIxnDGp74Rx
Szleb/jTjIRDH+6oMyRtS6FzWgw+p0pgYXo1ZDWsMOuEAJjPaPRnzZZEAAA7
EOF;
} else if ($image == "openfolder.gif") { $image = <<<EOF
R0lGODlhEQARALMAAAAAAP///2aZZg0TDW2YVpu0Y4uRDZCQAM/PYP//kOrq4//PkPDw8P///wAA
AAAAACH5BAEAAA0ALAAAAAARABEAAARZsMlJq724mb2zNAIjCkZmEEmaklz3KWosisXwMXGeIvZ2
/MAgIsHT4HKLxAIBQBRBsaSS2CwakcrFAXCwaQSppHix5HqN4iwZsT37gnDAuTGo2+92j34viQAA Ow==
EOF;
} else if ($image == "folder-up.gif") { $image = <<<EOF
R0lGODlhEAAQAKIHAPf39///zv/OnJycAM7OY///nAAAAP///yH5BAEAAAcALAAAAAAQABAAAANJ
eLrcOxAa90AIpYzpBvkgEUXKcJ3oVRCTmWXGmwns4cJGLBR7fedAHs+HeRl2yFWrCBMiiS8BUEdb
Jq+Cqi3EDXGmYDBlTCYnAAA7
EOF;
} else if ($image == "help.gif") { $image = <<<EOF
R0lGODlhEAAQAMQAAAIEBh0kMwZL0RRNzRxU0AtZ7wxn9Blr8xpz9yxo8DVt8id39yRm8kR59T5q
0Tp29U1/9lOC9l6K92yV+Hqk+HSc+Iao+Ja0+au95azE+rrN+rPC6MXV+9fj/fb5/ujv/SH5BAkA
AAAALAAAAAAQABAAAAjXAAFwGEhwoIaDCAVaqDBBQoQIECA0aPBAAQMHGzhQuLBwgoULHCVIVEAA
A4cKFih4/PDBgwcNER4kIJBRAsMJHThEaEDBg4UEMzdokDBhQgUOExooUODhAlCaMCU4lPjgQQUP
FBgE5dBAKsSJGj5keMCAAdQHD79e+FBhwYG3UBVAeCjx4IIFCN4OwJAhQYOIEilQuJvXgAC+DB5M
/NvhwwO8BgwjTqCgagMNHPAiMFDgcIYCWoECZfCWc2cMGxwMGECAwOrVAmILcIABwAYMuHPfzo0b QEAAOw==
EOF;
} header("Content-Type: image/gif"); header("Content-Disposition: inline"); return base64_decode($image); } function showOverLIBJavascript() { ?>
	<script type="text/javascript" src="http://www.snippetmaster.com/auto-installer/overlib_mini.js"></script>

<?php
} function doSocketConnection($remoteURL) { $URLinfo=@parse_url($remoteURL); $fp = @fsockopen($URLinfo['host'], 80, $errno, $errstr, 10); if (!$fp) { return false; } else { $header="GET ".$URLinfo['path']."?".$URLinfo['query']." HTTP/1.0\r\n"; $header.="Host: ".$URLinfo['host']."\r\n"; $header.="User-Agent: SnippetMaster Auto-Installer v".$version." (http://www.snippetmaster.com)\r\n"; $header.="Connection: close\r\n\r\n"; $data = false; if (@function_exists('stream_set_timeout')) { stream_set_timeout($fp, 20); } @fputs($fp, $header); if (@function_exists('socket_get_status')) { $status=@socket_get_status($fp); } else { $status=true; } while (!@feof($fp)&&$status) { $data.=@fgets($fp, 1024); if (@function_exists('socket_get_status')) { $status=@socket_get_status($fp); } else { if (@feof($fp)==true) { $status=false; } else { $status=true; } } } @fclose ($fp); if (!strpos($data, '200')) { return false; } if (!$data) { return false; } $data=@explode("\r\n\r\n", $data, 2); if (!$data[1]) { return false; } return $data[1]; } } function checkPathWritePermission($path) { $fname = $path . "/" . uniqid("DELETE-ME-"); $f = @fopen($fname, "w"); if (!$f) { return false; } @fclose($f); @unlink($fname); return true; } ?> 